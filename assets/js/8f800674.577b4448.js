"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[4106],{3191:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>d,contentTitle:()=>s,default:()=>_,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var t=n(4848),a=n(8453);const i={},s="uart flush input \u4e2d\u7684 rx_buffered_len error",l={id:"espressif/\u5ba2\u6237\u652f\u6301/uart/flush_input",title:"uart flush input \u4e2d\u7684 rx_buffered_len error",description:"\u95ee\u9898\u63cf\u8ff0\uff1a",source:"@site/docs/espressif/\u5ba2\u6237\u652f\u6301/uart/flush_input.md",sourceDirName:"espressif/\u5ba2\u6237\u652f\u6301/uart",slug:"/espressif/\u5ba2\u6237\u652f\u6301/uart/flush_input",permalink:"/docs/espressif/\u5ba2\u6237\u652f\u6301/uart/flush_input",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/espressif/\u5ba2\u6237\u652f\u6301/uart/flush_input.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"i2c \u9891\u7387\u95ee\u9898",permalink:"/docs/espressif/\u5ba2\u6237\u652f\u6301/i2c/i2c_frequency"},next:{title:"\u51fd\u6570\u6307\u9488",permalink:"/docs/code/C and C++/\u51fd\u6570\u6307\u9488"}},d={},c=[{value:"\u6d4b\u8bd5\u8fc7\u7a0b",id:"\u6d4b\u8bd5\u8fc7\u7a0b",level:2},{value:"1.\u5206\u914d\u5728\u4e0d\u540c\u7684\u6838\u4e0a\uff0c\u4e2d\u65ad\u4e0d\u653e\u5728IRAM\u4e0a\uff1a",id:"1\u5206\u914d\u5728\u4e0d\u540c\u7684\u6838\u4e0a\u4e2d\u65ad\u4e0d\u653e\u5728iram\u4e0a",level:3},{value:"2.\u5206\u914d\u5728\u4e0d\u540c\u6838\u4e0a\uff0c\u4e2d\u65ad\u653e\u5728IRAM\u4e0a\uff1a",id:"2\u5206\u914d\u5728\u4e0d\u540c\u6838\u4e0a\u4e2d\u65ad\u653e\u5728iram\u4e0a",level:3},{value:"3.\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\uff0c\u4e2d\u65ad\u653e\u5728IRAM\u4e0a\uff1a",id:"3\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\u4e2d\u65ad\u653e\u5728iram\u4e0a",level:3},{value:"4.\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\uff0c\u4e2d\u65ad\u672a\u653e\u5728IRAM\u4e0a\uff1a",id:"4\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\u4e2d\u65ad\u672a\u653e\u5728iram\u4e0a",level:3},{value:"\u95ee\u9898\u5206\u6790",id:"\u95ee\u9898\u5206\u6790",level:2},{value:"\u68380\u521d\u59cb\u5316 UART",id:"\u68380\u521d\u59cb\u5316-uart",level:3},{value:"\u68381\u8fd0\u884cflush_input",id:"\u68381\u8fd0\u884cflush_input",level:3},{value:"\u89e3\u51b3\u65b9\u6848",id:"\u89e3\u51b3\u65b9\u6848",level:2}];function u(e){const r={code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",p:"p",pre:"pre",strong:"strong",...(0,a.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.h1,{id:"uart-flush-input-\u4e2d\u7684-rx_buffered_len-error",children:"uart flush input \u4e2d\u7684 rx_buffered_len error"}),"\n",(0,t.jsx)(r.p,{children:"\u95ee\u9898\u63cf\u8ff0\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-txt",children:"- We're based of 4.4.0 -\xa0\xa0https://github.com/espressif/esp-idf/commit/8153bfe4125e6a608abccf1561fd10285016c90a\xa0\xa0\r\n- We've applied a fix on uart related to the proper restore of `RX interrupts after a flush` (https://github.com/espressif/esp-idf/commit/708e3b6ec0a21bdba1e9b1b7a21af629b5692b83#diff-8f585e8a3337213532ef1a8823cd3c7f7835158325bb599a8500a298e4b80c6c) .\r\n\r\n\r\n>>\xa02. how to reproduce the issue? Can it be reproduced with a simple demo code? If so, it would be great to help provide one.\r\n- we're evaluating how often the issue happens on the product with the final software.\xa0\xa0\r\n- What we noticed is that if you add more code before the execution enters into the critical region (line 1386 on image below) , the issue happens more often.\r\n-- We suspect concurrency between the uart rx interrupt handler and the task we call flush_input from. In our case, the uart is initialized on cpu0 and our serial protocol handler is pinned to cpu1.\r\n\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-txt",children:">> 1. \u60a8\u6b63\u5728\u4f7f\u7528\u7684 IDF \u7684\u8be6\u7ec6\u7248\u672c\uff0cIDF commit \u5c06\u6709\u6240\u5e2e\u52a9\u3002\r\n- \u6211\u4eec\u57fa\u4e8e 4.4.0 - https://github.com/espressif/esp-idf/commit/8153bfe4125e6a608abccf1561fd10285016c90a  \r\n- \u6211\u4eec\u5df2\u7ecf\u5728 uart \u4e0a\u5e94\u7528\u4e86\u4e00\u4e2a\u4e0e\u5237\u65b0\u540e\u6b63\u786e\u6062\u590d \u201cRX \u4e2d\u65ad \u201d\u6709\u5173\u7684\u4fee\u590d\u7a0b\u5e8f (https://github.com/espressif/esp-idf/commit/708e3b6ec0a21bdba1e9b1b7a21af629b5692b83#diff-8f585e8a3337213532ef1a8823cd3c7f7835158325bb599a8500a298e4b80c6c) .\r\n\r\n>> 2. \u5982\u4f55\u91cd\u73b0\u8be5\u95ee\u9898\uff1f\u80fd\u5426\u7528\u7b80\u5355\u7684\u6f14\u793a\u4ee3\u7801\u91cd\u73b0\u8be5\u95ee\u9898\uff1f\u5982\u679c\u53ef\u4ee5\uff0c\u6700\u597d\u80fd\u63d0\u4f9b\u4e00\u4e2a\u3002\r\n- \u6211\u4eec\u6b63\u5728\u8bc4\u4f30\u8be5\u95ee\u9898\u5728\u6700\u7ec8\u8f6f\u4ef6\u4ea7\u54c1\u4e0a\u7684\u53d1\u751f\u9891\u7387\u3002 \r\n- \u6211\u4eec\u6ce8\u610f\u5230\uff0c\u5982\u679c\u5728\u6267\u884c\u8fdb\u5165\u4e34\u754c\u533a\u57df\uff08\u4e0b\u56fe\u7b2c 1386 \u884c\uff09\u4e4b\u524d\u6dfb\u52a0\u66f4\u591a\u4ee3\u7801\uff0c\u95ee\u9898\u53d1\u751f\u7684\u9891\u7387\u4f1a\u66f4\u9ad8\u3002\r\n-- \u6211\u4eec\u6000\u7591 uart rx \u4e2d\u65ad\u5904\u7406\u7a0b\u5e8f\u4e0e\u6211\u4eec\u8c03\u7528 flush_input \u7684\u4efb\u52a1\u4e4b\u95f4\u5b58\u5728\u5e76\u53d1\u6027\u3002\u5728\u6211\u4eec\u7684\u6848\u4f8b\u4e2d\uff0cuart \u5728 cpu0 \u4e0a\u521d\u59cb\u5316\uff0c\u800c\u4e32\u884c\u534f\u8bae\u5904\u7406\u7a0b\u5e8f\u88ab\u56fa\u5b9a\u5728 cpu1 \u4e0a\u3002\r\n\r\n\n"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(1536).A+"",width:"1480",height:"850"})}),"\n",(0,t.jsx)(r.h2,{id:"\u6d4b\u8bd5\u8fc7\u7a0b",children:"\u6d4b\u8bd5\u8fc7\u7a0b"}),"\n",(0,t.jsx)(r.p,{children:"\u6d4b\u8bd5\u5206\u652f\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-shell",children:"\u279c  esp-idf git:(v4.4) \u2717 gcor 8153bfe     \n"})}),"\n",(0,t.jsx)(r.p,{children:"\u5206\u652f\u6539\u52a8\u5185\u5bb9\uff1a"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(1195).A+"",width:"1528",height:"953"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(6160).A+"",width:"1531",height:"385"})}),"\n",(0,t.jsx)(r.p,{children:"\u6d4b\u8bd5\u4ee3\u7801\uff1a"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:'#include <stdio.h>\r\n#include "freertos/FreeRTOS.h"\r\n#include "freertos/task.h"\r\n#include "driver/uart.h"\r\n#include "driver/gpio.h"\r\n\r\n#define BUF_SIZE (1024)\r\n\r\nstatic void uart_init_task(void *arg)\r\n{\r\n    /* Configure parameters of an UART driver,\r\n     * communication pins and install the driver */\r\n    uart_config_t uart_config = {\r\n        .baud_rate = 115200,\r\n        .data_bits = UART_DATA_8_BITS,\r\n        .parity = UART_PARITY_DISABLE,\r\n        .stop_bits = UART_STOP_BITS_1,\r\n        .flow_ctrl = UART_HW_FLOWCTRL_DISABLE,\r\n        .source_clk = UART_SCLK_APB,\r\n    };\r\n    int intr_alloc_flags = 0;\r\n\r\n#if CONFIG_UART_ISR_IN_IRAM\r\n    intr_alloc_flags = ESP_INTR_FLAG_IRAM;\r\n#endif\r\n\r\n    ESP_ERROR_CHECK(uart_driver_install(UART_NUM_1, BUF_SIZE * 2, 0, 0, NULL, intr_alloc_flags));\r\n    ESP_ERROR_CHECK(uart_param_config(UART_NUM_1, &uart_config));\r\n    ESP_ERROR_CHECK(uart_set_pin(UART_NUM_1, GPIO_NUM_4, GPIO_NUM_5, -1, -1));\r\n\r\n    while (1)\r\n    {\r\n        vTaskDelay(10 / portTICK_PERIOD_MS);\r\n    }\r\n}\r\n\r\nstatic void uart_read_task(void *arg)\r\n{\r\n    uint8_t *data = (uint8_t *)malloc(BUF_SIZE);\r\n\r\n    while (1)\r\n    {\r\n        // Read data from the UART\r\n        uart_flush_input(UART_NUM_1);\r\n\r\n        int len = uart_read_bytes(UART_NUM_1, data, BUF_SIZE, 10 / portTICK_PERIOD_MS);\r\n\r\n        // Write data back to the UART\r\n        uart_write_bytes(UART_NUM_1, (const char *)data, len);\r\n    }\r\n}\r\n\r\nvoid app_main(void)\r\n{\r\n    xTaskCreatePinnedToCore(uart_init_task, "uart_init_task", 5 * 1024, NULL, 4, NULL, 0);\r\n    xTaskCreatePinnedToCore(uart_read_task, "uart_read_task", 5 * 1024, NULL, 5, NULL, 1);\r\n}\r\n\r\n\n'})}),"\n",(0,t.jsx)(r.h3,{id:"1\u5206\u914d\u5728\u4e0d\u540c\u7684\u6838\u4e0a\u4e2d\u65ad\u4e0d\u653e\u5728iram\u4e0a",children:"1.\u5206\u914d\u5728\u4e0d\u540c\u7684\u6838\u4e0a\uff0c\u4e2d\u65ad\u4e0d\u653e\u5728IRAM\u4e0a\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u6709\u6548\u590d\u73b0\u95ee\u9898\uff0c\u5173rx\u4e2d\u65ad\u5df2\u52a0\u9501\uff0cflush\u4e2d\u52a0\u7a7a\u5ef6\u65f6"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(9826).A+"",width:"1257",height:"147"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(2005).A+"",width:"901",height:"703"})}),"\n",(0,t.jsx)(r.h3,{id:"2\u5206\u914d\u5728\u4e0d\u540c\u6838\u4e0a\u4e2d\u65ad\u653e\u5728iram\u4e0a",children:"2.\u5206\u914d\u5728\u4e0d\u540c\u6838\u4e0a\uff0c\u4e2d\u65ad\u653e\u5728IRAM\u4e0a\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u6709\u6548\u590d\u73b0\u95ee\u9898\uff0c\u5173rx\u4e2d\u65ad\u5df2\u52a0\u9501\uff0cflush\u4e2d\u52a0\u7a7a\u5ef6\u65f6"}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(8496).A+"",width:"901",height:"703"})}),"\n",(0,t.jsx)(r.h3,{id:"3\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\u4e2d\u65ad\u653e\u5728iram\u4e0a",children:"3.\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\uff0c\u4e2d\u65ad\u653e\u5728IRAM\u4e0a\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u5173rx\u4e2d\u65ad\u5df2\u52a0\u9501\uff0cflush\u4e2d\u52a0\u7a7a\u5ef6\u65f6\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u672a\u590d\u73b0\u95ee\u9898"}),"\n",(0,t.jsx)(r.h3,{id:"4\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\u4e2d\u65ad\u672a\u653e\u5728iram\u4e0a",children:"4.\u5206\u914d\u5728\u540c\u4e00\u4e2a\u6838\u4e0a\uff0c\u4e2d\u65ad\u672a\u653e\u5728IRAM\u4e0a\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u5173rx\u4e2d\u65ad\u5df2\u52a0\u9501\uff0cflush\u4e2d\u52a0\u7a7a\u5ef6\u65f6\uff1a"}),"\n",(0,t.jsx)(r.p,{children:"\u672a\u590d\u73b0\u95ee\u9898"}),"\n",(0,t.jsx)(r.h2,{id:"\u95ee\u9898\u5206\u6790",children:"\u95ee\u9898\u5206\u6790"}),"\n",(0,t.jsx)(r.h3,{id:"\u68380\u521d\u59cb\u5316-uart",children:"\u68380\u521d\u59cb\u5316 UART"}),"\n",(0,t.jsxs)(r.p,{children:[(0,t.jsx)(r.code,{children:"uart_driver_install"}),"\u5728\u68380\u4e0a\u521d\u59cb\u5316\uff0c\u5176\u4e2d",(0,t.jsx)(r.code,{children:"uart_isr_register"}),"\u6ce8\u518c\u4e2d\u65ad\uff1a"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"    r = uart_isr_register(uart_num, uart_rx_intr_handler_default, p_uart_obj[uart_num], intr_alloc_flags, &p_uart_obj[uart_num]->intr_handle);\n"})}),"\n",(0,t.jsxs)(r.p,{children:["\u5176\u4e2d",(0,t.jsx)(r.code,{children:"uart_rx_intr_handler_default"}),"\u4e2d\u65ad\u51fd\u6570\u5b58\u5728\u66f4\u65b0rx_buffered_len\u7684\u64cd\u4f5c\uff1a"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"p_uart->rx_buffered_len += p_uart->rx_stash_len;\n"})}),"\n",(0,t.jsxs)(r.p,{children:["\u5982\u4e0b\u4e3a",(0,t.jsx)(r.code,{children:"uart_isr_register"}),"\u51fd\u6570\u8bf4\u660e\uff1a"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"/**\r\n * @brief Register UART interrupt handler (ISR).\r\n *\r\n * @note UART ISR handler will be attached to the same CPU core that this function is running on.\r\n *\r\n * @param uart_num UART port number, the max port number is (UART_NUM_MAX -1).\r\n * @param fn  Interrupt handler function.\r\n * @param arg parameter for handler function\r\n * @param intr_alloc_flags Flags used to allocate the interrupt. One or multiple (ORred)\r\n *        ESP_INTR_FLAG_* values. See esp_intr_alloc.h for more info.\r\n * @param handle Pointer to return handle. If non-NULL, a handle for the interrupt will\r\n *        be returned here.\r\n *\r\n * @return\r\n *     - ESP_OK   Success\r\n *     - ESP_FAIL Parameter error\r\n */\r\nesp_err_t uart_isr_register(uart_port_t uart_num, void (*fn)(void*), void * arg, int intr_alloc_flags,  uart_isr_handle_t *handle);\n"})}),"\n",(0,t.jsx)(r.p,{children:"\u4ece\u51fd\u6570\u7533\u660e\u4e2d\u53ef\u4ee5\u770b\u5230\uff0cUART ISR \u5904\u7406\u7a0b\u5e8f\u5c06\u8fde\u63a5\u5230\u4e0e\u6b64\u51fd\u6570\u8fd0\u884c\u5728\u540c\u4e00 CPU \u5185\u6838\u4e0a\u3002\u6240\u4ee5\uff0c\u6b64\u65f6\u7684RX\u63a5\u6536\u4e2d\u65ad\u51fd\u6570\u8fd0\u884c\u5728\u68380\u3002"}),"\n",(0,t.jsxs)(r.p,{children:["\u8fdb\u4e00\u6b65\u5206\u6790",(0,t.jsx)(r.code,{children:"uart_isr_register"}),",\u4e2d\u65ad\u7531",(0,t.jsx)(r.code,{children:"esp_intr_alloc"}),"\u6ce8\u518c\uff1a"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"/**\r\n * @brief Allocate an interrupt with the given parameters.\r\n *\r\n * This finds an interrupt that matches the restrictions as given in the flags\r\n * parameter, maps the given interrupt source to it and hooks up the given\r\n * interrupt handler (with optional argument) as well. If needed, it can return\r\n * a handle for the interrupt as well.\r\n *\r\n * The interrupt will always be allocated on the core that runs this function.\r\n *\r\n * If ESP_INTR_FLAG_IRAM flag is used, and handler address is not in IRAM or\r\n * RTC_FAST_MEM, then ESP_ERR_INVALID_ARG is returned.\r\n *\r\n * @param source The interrupt source. One of the ETS_*_INTR_SOURCE interrupt mux\r\n *               sources, as defined in soc/soc.h, or one of the internal\r\n *               ETS_INTERNAL_*_INTR_SOURCE sources as defined in this header.\r\n * @param flags An ORred mask of the ESP_INTR_FLAG_* defines. These restrict the\r\n *               choice of interrupts that this routine can choose from. If this value\r\n *               is 0, it will default to allocating a non-shared interrupt of level\r\n *               1, 2 or 3. If this is ESP_INTR_FLAG_SHARED, it will allocate a shared\r\n *               interrupt of level 1. Setting ESP_INTR_FLAG_INTRDISABLED will return\r\n *               from this function with the interrupt disabled.\r\n * @param handler The interrupt handler. Must be NULL when an interrupt of level >3\r\n *               is requested, because these types of interrupts aren't C-callable.\r\n * @param arg    Optional argument for passed to the interrupt handler\r\n * @param ret_handle Pointer to an intr_handle_t to store a handle that can later be\r\n *               used to request details or free the interrupt. Can be NULL if no handle\r\n *               is required.\r\n *\r\n * @return ESP_ERR_INVALID_ARG if the combination of arguments is invalid.\r\n *         ESP_ERR_NOT_FOUND No free interrupt found with the specified flags\r\n *         ESP_OK otherwise\r\n */\r\nesp_err_t esp_intr_alloc(int source, int flags, intr_handler_t handler, void *arg, intr_handle_t *ret_handle);\r\n\n"})}),"\n",(0,t.jsxs)(r.p,{children:["The interrupt will always be allocated on the core that runs this function(\u4e2d\u65ad\u603b\u662f\u5206\u914d\u7ed9\u8fd0\u884c\u6b64\u51fd\u6570\u7684\u5185\u6838)\u3002\u6307\u660e\u4e86",(0,t.jsx)(r.strong,{children:"rx\u7684\u4e2d\u65ad\u51fd\u6570\u88ab\u6ce8\u518c\u5230\u68380\u4e0a"}),"\u3002"]}),"\n",(0,t.jsx)(r.h3,{id:"\u68381\u8fd0\u884cflush_input",children:"\u68381\u8fd0\u884cflush_input"}),"\n",(0,t.jsxs)(r.p,{children:["\u5728\u68381\u4e0a\u7684",(0,t.jsx)(r.code,{children:"uart_flush_input"}),"\u4e2d\u5b58\u5728\u5173\u95edrx\u63a5\u6536\u4e2d\u65ad\u7684\u64cd\u4f5c\uff1a"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"uart_disable_intr_mask_and_return_prev(uart_num, UART_INTR_RXFIFO_FULL | UART_INTR_RXFIFO_TOUT, &prev_mask);\n"})}),"\n",(0,t.jsxs)(r.p,{children:["\u5176\u4e0e",(0,t.jsx)(r.code,{children:"uart_disable_rx_intr"}),"\u884c\u4e3a\u4fdd\u6301\u4e00\u81f4\uff1a"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"esp_err_t uart_disable_rx_intr(uart_port_t uart_num)\r\n{\r\n    return uart_disable_intr_mask(uart_num, UART_INTR_RXFIFO_FULL | UART_INTR_RXFIFO_TOUT);\r\n}\n"})}),"\n",(0,t.jsxs)(r.p,{children:["\u6b64\u65f6\u5c31\u5b58\u5728\uff0c\u5728\u68381\u4e0a\u64cd\u4f5c\u548c0\u7684\u4e2d\u65ad\uff0c\u800c",(0,t.jsx)(r.code,{children:"p_uart->rx_buffered_len"}),"\u7684\u64cd\u4f5c\u5904\u4e8e\u68380\u4e0a\uff0c\u5bfc\u81f4\u5b58\u5728\u5bf9",(0,t.jsx)(r.code,{children:"p_uart->rx_buffered_len"}),"\u7684\u5f71\u54cd\uff0c\u8fdb\u4e00\u6b65\u89e6\u53d1",(0,t.jsx)(r.code,{children:"rx_buffered_len error"}),"\u7684\u95ee\u9898\u3002"]}),"\n",(0,t.jsx)(r.h2,{id:"\u89e3\u51b3\u65b9\u6848",children:"\u89e3\u51b3\u65b9\u6848"}),"\n",(0,t.jsxs)(r.p,{children:["\u53c2\u8003",(0,t.jsx)(r.code,{children:"IDF Release 4.4 \u53ca\u4ee5\u540e\u7248\u672c"}),"\u4e2d",(0,t.jsx)(r.code,{children:"uart_flush_input"}),"\u7684\u6539\u52a8\uff0c\u589e\u52a0\u5728\u5f00\u542f\u4e0e\u5173\u95eduart rx\u4e2d\u65ad\u65f6\u52a0\u9501\uff0c\u5e76\u5c06",(0,t.jsx)(r.code,{children:"uart_driver_install"}),"\u4e0e",(0,t.jsx)(r.code,{children:"uart_flush_input"}),"\u653e\u5728\u540c\u4e00\u6838\u4e0a\u3002"]}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(7495).A+"",width:"1175",height:"135"})}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.img,{src:n(9740).A+"",width:"798",height:"108"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"UART_ENTER_CRITICAL(&(uart_context[uart_num].spinlock));\r\nuart_disable_intr_mask_and_return_prev(uart_num, UART_INTR_RXFIFO_FULL | UART_INTR_RXFIFO_TOUT, &prev_mask);\r\nUART_EXIT_CRITICAL(&(uart_context[uart_num].spinlock));\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:"UART_ENTER_CRITICAL(&(uart_context[uart_num].spinlock));\r\nuart_enable_intr_mask(uart_num, prev_mask);\r\nUART_EXIT_CRITICAL(&(uart_context[uart_num].spinlock));\n"})}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-c",children:'xTaskCreatePinnedToCore(uart_init_task, "uart_init_task", 5 * 1024, NULL, 4, NULL, 0);\r\nxTaskCreatePinnedToCore(uart_read_task, "uart_read_task", 5 * 1024, NULL, 5, NULL, 0);\n'})})]})}function _(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}},1536:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/flush\u52a0\u5ef6\u65f6\u64cd\u4f5c-ad4a88ba7e83e568f963a66c7a98aae7.png"},2005:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/\u4e0d\u540c\u6838\u4e0d\u5728IRAM\u7684XCOM-e16034361149677cdc1aba57d0f08b45.png"},9826:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/\u4e0d\u540c\u6838\u4e14\u4e2d\u65ad\u4e0d\u5728IRAM-8f905fe37d95754983de68be2f5f89c9.png"},8496:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/\u4e0d\u540c\u6838\u4e2d\u65ad\u5728IRAM\u7684XCOM-25300547b7890d6b162ccf96c8ac07c8.png"},7495:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/\u52a0\u9501-54ba56a3c3d057cb4227765467d68557.png"},9740:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/\u52a0\u95012-815f99410cf7c9a463bd740b1a690550.png"},1195:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/\u6539\u52a8\u5185\u5bb91-e59bd605e78ad38d987c1d2eb7a8285f.png"},6160:(e,r,n)=>{n.d(r,{A:()=>t});const t=n.p+"assets/images/\u6539\u52a8\u5185\u5bb92-3301314cc3192b30966a680fc2f492c1.png"},8453:(e,r,n)=>{n.d(r,{R:()=>s,x:()=>l});var t=n(6540);const a={},i=t.createContext(a);function s(e){const r=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),t.createElement(i.Provider,{value:r},e.children)}}}]);