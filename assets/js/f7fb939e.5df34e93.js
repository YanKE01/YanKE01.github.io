"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1928],{9642:(_,e,r)=>{r.r(e),r.d(e,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>s});var n=r(4848),t=r(8453);const i={},a="AUDIO PDM NS4150",c={id:"espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AUDIO/audio_pdm",title:"AUDIO PDM NS4150",description:"\u9a71\u52a8NS4150\u5b9e\u73b0\u97f3\u9891\u64ad\u653e\uff0c\u8bbe\u8ba1\u7684package:",source:"@site/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AUDIO/audio_pdm.md",sourceDirName:"espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AUDIO",slug:"/espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AUDIO/audio_pdm",permalink:"/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AUDIO/audio_pdm",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AUDIO/audio_pdm.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"AT\u56fa\u4ef6\u70e7\u5f55\u6d4b\u8bd5",permalink:"/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AT/at_first_use"},next:{title:"\u767e\u5ea6\u8bed\u97f3\u5408\u6210",permalink:"/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/\u5916\u8bbe/AUDIO/baidu_tts"}},d={},s=[{value:"codec_dev\u5e95\u5c42\u9a71\u52a8\u5bf9\u63a5",id:"codec_dev\u5e95\u5c42\u9a71\u52a8\u5bf9\u63a5",level:3},{value:"1.\u521d\u59cb\u5316I2S\u7684PDM",id:"1\u521d\u59cb\u5316i2s\u7684pdm",level:4},{value:"2.\u5bf9\u63a5codec\u89e3\u7801",id:"2\u5bf9\u63a5codec\u89e3\u7801",level:4},{value:"3.\u57fa\u4e8ecodec\u7684\u97f3\u9891\u64ad\u653e",id:"3\u57fa\u4e8ecodec\u7684\u97f3\u9891\u64ad\u653e",level:4},{value:"audio_player\u4e0a\u5c42\u5e94\u7528",id:"audio_player\u4e0a\u5c42\u5e94\u7528",level:3},{value:"\u5b8c\u6574\u4ee3\u7801\uff1a",id:"\u5b8c\u6574\u4ee3\u7801",level:3}];function o(_){const e={code:"code",h1:"h1",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),..._.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(e.h1,{id:"audio-pdm-ns4150",children:"AUDIO PDM NS4150"}),"\n",(0,n.jsx)(e.p,{children:"\u9a71\u52a8NS4150\u5b9e\u73b0\u97f3\u9891\u64ad\u653e\uff0c\u8bbe\u8ba1\u7684package:"}),"\n",(0,n.jsxs)(e.ul,{children:["\n",(0,n.jsx)(e.li,{children:"espressif/esp_codec_dev"}),"\n",(0,n.jsx)(e.li,{children:"chmorgan/esp-audio-player"}),"\n"]}),"\n",(0,n.jsx)(e.h3,{id:"codec_dev\u5e95\u5c42\u9a71\u52a8\u5bf9\u63a5",children:"codec_dev\u5e95\u5c42\u9a71\u52a8\u5bf9\u63a5"}),"\n",(0,n.jsx)(e.h4,{id:"1\u521d\u59cb\u5316i2s\u7684pdm",children:"1.\u521d\u59cb\u5316I2S\u7684PDM"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-c",children:"const audio_codec_data_if_t *audio_i2s_init(i2s_port_t i2s_port, gpio_num_t i2s_dout, i2s_chan_handle_t *tx_channel, uint16_t sample_rate)\r\n{\r\n    i2s_chan_config_t chan_cfg = I2S_CHANNEL_DEFAULT_CONFIG(i2s_port, I2S_ROLE_MASTER);\r\n    chan_cfg.auto_clear = true;\r\n    ESP_ERROR_CHECK(i2s_new_channel(&chan_cfg, tx_channel, NULL));\r\n\r\n    i2s_pdm_tx_config_t pdm_cfg = {\r\n        .clk_cfg = I2S_PDM_TX_CLK_DEFAULT_CONFIG(sample_rate),\r\n        .slot_cfg = I2S_PDM_TX_SLOT_DEFAULT_CONFIG(I2S_DATA_BIT_WIDTH_16BIT, I2S_SLOT_MODE_MONO),\r\n        .gpio_cfg.clk = GPIO_NUM_NC,\r\n        .gpio_cfg.dout = i2s_dout,\r\n        .gpio_cfg.invert_flags.clk_inv = false,\r\n    };\r\n\r\n    // i2s\u901a\u9053\u521d\u59cb\u5316:PDM\u6a21\u5f0f\r\n    ESP_ERROR_CHECK(i2s_channel_init_pdm_tx_mode(*tx_channel, &pdm_cfg));\r\n    // i2s\u901a\u9053\u4f7f\u80fd\r\n    ESP_ERROR_CHECK(i2s_channel_enable(*tx_channel));\r\n\r\n    // \u521d\u59cb\u5316codec\u89e3\u7801\r\n    audio_codec_i2s_cfg_t i2s_cfg = {\r\n        .port = i2s_port,\r\n        .rx_handle = NULL,\r\n        .tx_handle = i2s_tx_chan,\r\n    };\r\n    return audio_codec_new_i2s_data(&i2s_cfg);\r\n}\n"})}),"\n",(0,n.jsx)(e.h4,{id:"2\u5bf9\u63a5codec\u89e3\u7801",children:"2.\u5bf9\u63a5codec\u89e3\u7801"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-c",children:"esp_codec_dev_handle_t audio_codec_init(const audio_codec_data_if_t *data_if)\r\n{\r\n    assert(data_if);\r\n\r\n    esp_codec_dev_cfg_t codec_dev_cfg = {\r\n        .dev_type = ESP_CODEC_DEV_TYPE_OUT,\r\n        .codec_if = NULL,\r\n        .data_if = data_if,\r\n    };\r\n\r\n    return esp_codec_dev_new(&codec_dev_cfg);\r\n}\n"})}),"\n",(0,n.jsx)(e.h4,{id:"3\u57fa\u4e8ecodec\u7684\u97f3\u9891\u64ad\u653e",children:"3.\u57fa\u4e8ecodec\u7684\u97f3\u9891\u64ad\u653e"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-c",children:"esp_err_t aduio_write(void *audio_buffer, size_t len, size_t *bytes_written, uint32_t timeout_ms)\r\n{\r\n    esp_err_t ret = ESP_OK;\r\n    ret = esp_codec_dev_write(play_dev_handle, audio_buffer, len);\r\n    *bytes_written = len;\r\n    return ret;\r\n}\n"})}),"\n",(0,n.jsx)(e.h3,{id:"audio_player\u4e0a\u5c42\u5e94\u7528",children:"audio_player\u4e0a\u5c42\u5e94\u7528"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-c",children:'static esp_err_t aduio_app_mute_function(AUDIO_PLAYER_MUTE_SETTING setting)\r\n{\r\n    return ESP_OK;\r\n}\r\n\r\nesp_err_t aduio_app_write(void *audio_buffer, size_t len, size_t *bytes_written, uint32_t timeout_ms)\r\n{\r\n    esp_err_t ret = ESP_OK;\r\n\r\n    if (aduio_write(audio_buffer, len, bytes_written, 1000) != ESP_OK)\r\n    {\r\n        ret = ESP_FAIL;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nesp_err_t audio_app_reconfig_clk(uint32_t rate, uint32_t bits_cfg, i2s_slot_mode_t ch)\r\n{\r\n    esp_err_t ret = ESP_OK;\r\n\r\n    esp_codec_dev_sample_info_t fs = {\r\n        .sample_rate = rate,\r\n        .channel = ch,\r\n        .bits_per_sample = bits_cfg,\r\n    };\r\n    ret = esp_codec_dev_close(play_dev_handle);\r\n    ret = esp_codec_dev_open(play_dev_handle, &fs);\r\n    return ret;\r\n}\r\n\r\nesp_err_t audio_app_player_music(char *file_path)\r\n{\r\n    FILE *fp = fopen(file_path, "r");\r\n    return audio_player_play(fp);\r\n}\n'})}),"\n",(0,n.jsx)(e.p,{children:"\u5b8c\u6574\u8c03\u7528\u6d41\u7a0b\uff1a"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-c",children:"esp_err_t audio_player_init(i2s_port_t i2s_port, gpio_num_t i2s_dout, uint16_t sample_rate)\r\n{\r\n    i2s_data_if = audio_i2s_init(i2s_port, i2s_dout, &i2s_tx_chan, sample_rate);\r\n    if (i2s_data_if == NULL)\r\n    {\r\n        return ESP_FAIL;\r\n    }\r\n\r\n    play_dev_handle = audio_codec_init(i2s_data_if);\r\n    if (play_dev_handle == NULL)\r\n    {\r\n        return ESP_FAIL;\r\n    }\r\n    audio_player_config_t config = {\r\n        .mute_fn = aduio_app_mute_function,\r\n        .write_fn = aduio_app_write,\r\n        .clk_set_fn = audio_app_reconfig_clk,\r\n        .priority = 5,\r\n    };\r\n    ESP_ERROR_CHECK(audio_player_new(config));\r\n    audio_player_callback_register(audio_app_callback, NULL);\r\n    return ESP_OK;\r\n}\n"})}),"\n",(0,n.jsx)(e.h3,{id:"\u5b8c\u6574\u4ee3\u7801",children:"\u5b8c\u6574\u4ee3\u7801\uff1a"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-c",children:'#include "pdm.h"\r\n#include "esp_codec_dev_defaults.h"\r\n#include "audio_player.h"\r\n#include "esp_log.h"\r\n\r\nstatic const char *TAG = "ADUIO";\r\n\r\nconst audio_codec_data_if_t *i2s_data_if;\r\ni2s_chan_handle_t i2s_tx_chan;\r\nesp_codec_dev_handle_t play_dev_handle;\r\n\r\nconst audio_codec_data_if_t *audio_i2s_init(i2s_port_t i2s_port, gpio_num_t i2s_dout, i2s_chan_handle_t *tx_channel, uint16_t sample_rate)\r\n{\r\n    i2s_chan_config_t chan_cfg = I2S_CHANNEL_DEFAULT_CONFIG(i2s_port, I2S_ROLE_MASTER);\r\n    chan_cfg.auto_clear = true;\r\n    ESP_ERROR_CHECK(i2s_new_channel(&chan_cfg, tx_channel, NULL));\r\n\r\n    i2s_pdm_tx_config_t pdm_cfg = {\r\n        .clk_cfg = I2S_PDM_TX_CLK_DEFAULT_CONFIG(sample_rate),\r\n        .slot_cfg = I2S_PDM_TX_SLOT_DEFAULT_CONFIG(I2S_DATA_BIT_WIDTH_16BIT, I2S_SLOT_MODE_MONO),\r\n        .gpio_cfg.clk = GPIO_NUM_NC,\r\n        .gpio_cfg.dout = i2s_dout,\r\n        .gpio_cfg.invert_flags.clk_inv = false,\r\n    };\r\n\r\n    // i2s\u901a\u9053\u521d\u59cb\u5316:PDM\u6a21\u5f0f\r\n    ESP_ERROR_CHECK(i2s_channel_init_pdm_tx_mode(*tx_channel, &pdm_cfg));\r\n    // i2s\u901a\u9053\u4f7f\u80fd\r\n    ESP_ERROR_CHECK(i2s_channel_enable(*tx_channel));\r\n\r\n    // \u521d\u59cb\u5316codec\u89e3\u7801\r\n    audio_codec_i2s_cfg_t i2s_cfg = {\r\n        .port = i2s_port,\r\n        .rx_handle = NULL,\r\n        .tx_handle = i2s_tx_chan,\r\n    };\r\n    return audio_codec_new_i2s_data(&i2s_cfg);\r\n}\r\n\r\nesp_codec_dev_handle_t audio_codec_init(const audio_codec_data_if_t *data_if)\r\n{\r\n    assert(data_if);\r\n\r\n    esp_codec_dev_cfg_t codec_dev_cfg = {\r\n        .dev_type = ESP_CODEC_DEV_TYPE_OUT,\r\n        .codec_if = NULL,\r\n        .data_if = data_if,\r\n    };\r\n\r\n    return esp_codec_dev_new(&codec_dev_cfg);\r\n}\r\n\r\nesp_err_t aduio_write(void *audio_buffer, size_t len, size_t *bytes_written, uint32_t timeout_ms)\r\n{\r\n    esp_err_t ret = ESP_OK;\r\n    ret = esp_codec_dev_write(play_dev_handle, audio_buffer, len);\r\n    *bytes_written = len;\r\n    return ret;\r\n}\r\n\r\nstatic esp_err_t aduio_app_mute_function(AUDIO_PLAYER_MUTE_SETTING setting)\r\n{\r\n    return ESP_OK;\r\n}\r\n\r\nesp_err_t aduio_app_write(void *audio_buffer, size_t len, size_t *bytes_written, uint32_t timeout_ms)\r\n{\r\n    esp_err_t ret = ESP_OK;\r\n\r\n    if (aduio_write(audio_buffer, len, bytes_written, 1000) != ESP_OK)\r\n    {\r\n        ret = ESP_FAIL;\r\n    }\r\n\r\n    return ret;\r\n}\r\n\r\nesp_err_t audio_app_reconfig_clk(uint32_t rate, uint32_t bits_cfg, i2s_slot_mode_t ch)\r\n{\r\n    esp_err_t ret = ESP_OK;\r\n\r\n    esp_codec_dev_sample_info_t fs = {\r\n        .sample_rate = rate,\r\n        .channel = ch,\r\n        .bits_per_sample = bits_cfg,\r\n    };\r\n    ret = esp_codec_dev_close(play_dev_handle);\r\n    ret = esp_codec_dev_open(play_dev_handle, &fs);\r\n    return ret;\r\n}\r\n\r\nesp_err_t audio_app_player_music(char *file_path)\r\n{\r\n    FILE *fp = fopen(file_path, "r");\r\n    return audio_player_play(fp);\r\n}\r\n\r\nstatic void audio_app_callback(audio_player_cb_ctx_t *ctx)\r\n{\r\n    switch (ctx->audio_event)\r\n    {\r\n    case 0: /**< Player is idle, not playing audio */\r\n        ESP_LOGI(TAG, "IDLE");\r\n        break;\r\n    case 1:\r\n        ESP_LOGI(TAG, "NEXT");\r\n        break;\r\n    case 2:\r\n        ESP_LOGI(TAG, "PLAYING");\r\n        break;\r\n    case 3:\r\n        ESP_LOGI(TAG, "PAUSE");\r\n        break;\r\n    case 4:\r\n        ESP_LOGI(TAG, "SHUTDOWN");\r\n        break;\r\n    case 5:\r\n        ESP_LOGI(TAG, "UNKNOWN FILE");\r\n        break;\r\n    case 6:\r\n        ESP_LOGI(TAG, "UNKNOWN");\r\n        break;\r\n    }\r\n}\r\n\r\nesp_err_t audio_player_init(i2s_port_t i2s_port, gpio_num_t i2s_dout, uint16_t sample_rate)\r\n{\r\n    i2s_data_if = audio_i2s_init(i2s_port, i2s_dout, &i2s_tx_chan, sample_rate);\r\n    if (i2s_data_if == NULL)\r\n    {\r\n        return ESP_FAIL;\r\n    }\r\n\r\n    play_dev_handle = audio_codec_init(i2s_data_if);\r\n    if (play_dev_handle == NULL)\r\n    {\r\n        return ESP_FAIL;\r\n    }\r\n    audio_player_config_t config = {\r\n        .mute_fn = aduio_app_mute_function,\r\n        .write_fn = aduio_app_write,\r\n        .clk_set_fn = audio_app_reconfig_clk,\r\n        .priority = 5,\r\n    };\r\n    ESP_ERROR_CHECK(audio_player_new(config));\r\n    audio_player_callback_register(audio_app_callback, NULL);\r\n    return ESP_OK;\r\n}\n'})}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{className:"language-c",children:'#pragma once\r\n\r\n#include "esp_err.h"\r\n#include "driver/gpio.h"\r\n#include "driver/i2s_pdm.h"\r\n#include "esp_codec_dev.h"\r\n\r\n/**\r\n * @brief audio init\r\n * \r\n * @param i2s_port \r\n * @param i2s_dout \r\n * @param sample_rate \r\n * @return esp_err_t \r\n */\r\nesp_err_t audio_player_init(i2s_port_t i2s_port, gpio_num_t i2s_dout, uint16_t sample_rate);\r\n\r\n/**\r\n * @brief audio player music\r\n * \r\n * @param file_path \r\n * @return esp_err_t \r\n */\r\nesp_err_t audio_app_player_music(char *file_path);\r\n\n'})})]})}function p(_={}){const{wrapper:e}={...(0,t.R)(),..._.components};return e?(0,n.jsx)(e,{..._,children:(0,n.jsx)(o,{..._})}):o(_)}},8453:(_,e,r)=>{r.d(e,{R:()=>a,x:()=>c});var n=r(6540);const t={},i=n.createContext(t);function a(_){const e=n.useContext(i);return n.useMemo((function(){return"function"==typeof _?_(e):{...e,..._}}),[e,_])}function c(_){let e;return e=_.disableParentContext?"function"==typeof _.components?_.components(t):_.components||t:a(_.components),n.createElement(i.Provider,{value:e},_.children)}}}]);