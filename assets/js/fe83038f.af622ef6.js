"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[7026],{170:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>a,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=t(4848),i=t(8453);const s={},o="TFLite Micro Regression",l={id:"espressif/\u4e2a\u4eba\u5b66\u4e60/DL/tflite_micro_regression",title:"TFLite Micro Regression",description:"\u4f7f\u7528tflite\u8fdb\u884c\u56de\u5f52\u6a21\u578b\u63a8\u7406",source:"@site/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/DL/tflite_micro_regression.md",sourceDirName:"espressif/\u4e2a\u4eba\u5b66\u4e60/DL",slug:"/espressif/\u4e2a\u4eba\u5b66\u4e60/DL/tflite_micro_regression",permalink:"/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/DL/tflite_micro_regression",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/DL/tflite_micro_regression.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"TFLITE CIFAR10",permalink:"/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/DL/tflite_2d"},next:{title:"\u4efb\u52a1\u901a\u77e5",permalink:"/docs/espressif/\u4e2a\u4eba\u5b66\u4e60/FreeRTOS/\u4efb\u52a1\u901a\u77e5"}},a={},d=[{value:"1.\u6a21\u578b\u642d\u5efa",id:"1\u6a21\u578b\u642d\u5efa",level:3},{value:"2.ESP32\u90e8\u7f72",id:"2esp32\u90e8\u7f72",level:3},{value:"\u6dfb\u52a0\u7ec4\u4ef6",id:"\u6dfb\u52a0\u7ec4\u4ef6",level:4},{value:"\u6dfb\u52a0\u6a21\u578b\u6587\u4ef6",id:"\u6dfb\u52a0\u6a21\u578b\u6587\u4ef6",level:4},{value:"\u9879\u76ee\u4ee3\u7801",id:"\u9879\u76ee\u4ee3\u7801",level:3}];function p(e){const r={a:"a",code:"code",h1:"h1",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.h1,{id:"tflite-micro-regression",children:"TFLite Micro Regression"}),"\n",(0,n.jsxs)(r.p,{children:["\u4f7f\u7528tflite\u8fdb\u884c\u56de\u5f52\u6a21\u578b\u63a8\u7406\r\n\u53c2\u8003tflite_micro\u5b98\u7f51\u4f8b\u5b50\uff1a",(0,n.jsx)(r.a,{href:"https://github.com/tensorflow/tflite-micro/tree/main/tensorflow/lite/micro/examples/hello_world",children:"hello world"}),"\r\n\u5728\u539f\u6709\u4f8b\u5b50\u7684\u57fa\u7840\u4e0a\uff0c\u7701\u53bb\u4e86\u8f93\u5165\u4e0e\u8f93\u51fa\u7684int8\u5904\u7406\uff0c\u76f4\u63a5\u652f\u6301\u6d6e\u70b9"]}),"\n",(0,n.jsx)(r.h3,{id:"1\u6a21\u578b\u642d\u5efa",children:"1.\u6a21\u578b\u642d\u5efa"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-python",children:"\r\nimport numpy as np\r\nimport tensorflow as tf\r\nfrom tensorflow.keras.models import Sequential\r\nfrom tensorflow.keras.layers import Dense, Flatten\r\nimport matplotlib.pyplot as plt\r\nimport math\r\nfrom sklearn.model_selection import train_test_split\r\n\r\n#\u751f\u6210\u6570\u636e\u96c6\r\nx_values = np.arange(0,2*math.pi,0.001)\r\nnp.random.shuffle(x_values)\r\ny_values = np.sin(x_values)\r\ny_values += 0.1 * np.random.randn(*y_values.shape)\r\nx_train,x_test,y_train,y_test = train_test_split(x_values,y_values,test_size=0.3)\r\nplt.plot(x_values, y_values, 'b.')\r\nplt.show()\r\n\r\n#\u521b\u5efa\u6a21\u578b\r\nmodel = tf.keras.Sequential()\r\nmodel.add(Dense(32, activation='relu', input_shape=(1,)))\r\nmodel.add(Dense(16, activation='relu'))\r\nmodel.add(Dense(1,activation='linear'))\r\n\r\nprint(model.summary())\r\n\r\n#\u6a21\u578b\u8bad\u7ec3\r\nmodel.compile(optimizer='adam', loss='mse', metrics=['mae'])\r\nmodel.fit(x_train, y_train, epochs=100, batch_size=128, validation_data=(x_test, y_test))\r\n\r\n#\u6a21\u578b\u9884\u6d4b\r\nx_test = np.array(0.5*math.pi).astype('float32').reshape(1,1)\r\nprint(model.predict(x_test))\r\n\r\n#\u6a21\u578b\u91cf\u5316\r\nconverter = tf.lite.TFLiteConverter.from_keras_model(model)\r\nconverter.optimizations = [tf.lite.Optimize.DEFAULT]\r\nconverter.target_spec.supported_ops = [tf.lite.OpsSet.TFLITE_BUILTINS]\r\ntflite_model = converter.convert()\r\nopen(\"sine_model_quantized.tflite\", \"wb\").write(tflite_model)\r\n\r\n#\u4f7f\u7528tflite\u63a8\u7406\r\nx = np.array(0.5*math.pi).astype('float32').reshape(1,1)\r\n\r\ninterpreter = tf.lite.Interpreter(model_path=\"sine_model_quantized.tflite\")\r\ninput_details = interpreter.get_input_details()\r\noutput_details = interpreter.get_output_details()\r\n\r\n\r\ninterpreter.resize_tensor_input(input_details[0]['index'], x.shape)\r\ninterpreter.allocate_tensors()\r\n\r\ninterpreter.set_tensor(input_details[0]['index'], x)\r\ninterpreter.invoke()\r\noutput_data = interpreter.get_tensor(output_details[0]['index'])\r\n\r\nprint(output_data)\n"})}),"\n",(0,n.jsx)(r.p,{children:"\u6a21\u578b\u8f6c\u6362"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"!apt-get -qq install xxd\r\n!xxd -i sine_model_quantized.tflite > sine_model_quantized.cc\n"})}),"\n",(0,n.jsx)(r.h3,{id:"2esp32\u90e8\u7f72",children:"2.ESP32\u90e8\u7f72"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{href:"https://github.com/espressif/esp-tflite-micro",children:"https://github.com/espressif/esp-tflite-micro"})}),"\n",(0,n.jsx)(r.h4,{id:"\u6dfb\u52a0\u7ec4\u4ef6",children:"\u6dfb\u52a0\u7ec4\u4ef6"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:'idf.py add-dependency "esp-tflite-micro"\n'})}),"\n",(0,n.jsx)(r.h4,{id:"\u6dfb\u52a0\u6a21\u578b\u6587\u4ef6",children:"\u6dfb\u52a0\u6a21\u578b\u6587\u4ef6"}),"\n",(0,n.jsx)(r.p,{children:"\u5c06mnist.cc\u6587\u4ef6\u7684\u6570\u7ec4\u6dfb\u52a0\u5230\u5de5\u7a0b\u4e2d\uff0c\u8fd9\u91cc\u6587\u4ef6\u540d\u5c31\u4e0d\u6539\u4e86\uff0c\u5185\u90e8\u6570\u7ec4\u7684\u503c\u9700\u8981\u6539\u52a8"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-shell",children:"main\r\n\u251c\u2500\u2500 CMakeLists.txt\r\n\u251c\u2500\u2500 idf_component.yml\r\n\u251c\u2500\u2500 include\r\n\u2502   \u2514\u2500\u2500 mnist.h\r\n\u251c\u2500\u2500 main.cc\r\n\u2514\u2500\u2500 mnist.cc\n"})}),"\n",(0,n.jsx)(r.p,{children:"\u4fee\u6539\u4e3b\u51fd\u6570"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-c++",children:'#include <stdio.h>\r\n#include <freertos/FreeRTOS.h>\r\n#include <freertos/task.h>\r\n#include "esp_log.h"\r\n#include "tensorflow/lite/micro/micro_mutable_op_resolver.h"\r\n#include "tensorflow/lite/micro/micro_interpreter.h"\r\n#include "tensorflow/lite/micro/system_setup.h"\r\n#include "tensorflow/lite/schema/schema_generated.h"\r\n#include "mnist.h"\r\n\r\nstatic const char *TAG = "TFLITE";\r\nconstexpr int kTensorArenaSize = 10240;\r\nuint8_t tensor_arena[kTensorArenaSize];\r\n\r\nextern "C" void app_main(void)\r\n{\r\n    tflite::MicroInterpreter *interpreter = nullptr;\r\n    TfLiteTensor *input = nullptr;\r\n    TfLiteTensor *output = nullptr;\r\n\r\n    const tflite::Model *model = tflite::GetModel(mnist_tflite);\r\n    if (model->version() != TFLITE_SCHEMA_VERSION)\r\n    {\r\n        MicroPrintf("Model provided is schema version %d not equal to supported "\r\n                    "version %d.",\r\n                    model->version(), TFLITE_SCHEMA_VERSION);\r\n        return;\r\n    }\r\n\r\n    static tflite::MicroMutableOpResolver<1> resolver;\r\n    //\u53ea\u9700\u8981\u52a0\u5165\u4e00\u4e2a\u5168\u8fde\u63a5\u5c42\u5c31\u53ef\u4ee5\u4e86\r\n    if (resolver.AddFullyConnected() != kTfLiteOk)\r\n    {\r\n        ESP_LOGI(TAG, "Add reshape failed");\r\n        return;\r\n    }\r\n\r\n    // Create interpreter\r\n    static tflite::MicroInterpreter static_interpreter(model, resolver, tensor_arena, kTensorArenaSize);\r\n    interpreter = &static_interpreter;\r\n\r\n    // Allocate memory for model tensor\r\n    TfLiteStatus allocate_status = interpreter->AllocateTensors();\r\n    if (allocate_status != kTfLiteOk)\r\n    {\r\n        MicroPrintf("AllocateTensors() failed");\r\n        return;\r\n    }\r\n\r\n    input = interpreter->input(0);\r\n    output = interpreter->output(0);\r\n\r\n    while (1)\r\n    {\r\n\r\n        input->data.f[0] = 1.570f; //\u63a8\u74060.5*pi\r\n        TfLiteStatus invoke_status = interpreter->Invoke();\r\n        if (invoke_status != kTfLiteOk)\r\n        {\r\n            MicroPrintf("Invoke failed on");\r\n            return;\r\n        }\r\n        printf("result:%.2f\\n", output->data.f[0]);\r\n\r\n        vTaskDelay(1000 / portTICK_PERIOD_MS);\r\n    }\r\n}\n'})}),"\n",(0,n.jsx)(r.h3,{id:"\u9879\u76ee\u4ee3\u7801",children:"\u9879\u76ee\u4ee3\u7801"}),"\n",(0,n.jsx)(r.p,{children:(0,n.jsx)(r.a,{target:"_blank","data-noBrokenLinkCheck":!0,href:t(5202).A+"",children:"regression"})})]})}function c(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},5202:(e,r,t)=>{t.d(r,{A:()=>n});const n=t.p+"assets/files/idf_regression-401fee763f94c52254f52ad31175056d.ipynb"},8453:(e,r,t)=>{t.d(r,{R:()=>o,x:()=>l});var n=t(6540);const i={},s=n.createContext(i);function o(e){const r=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(s.Provider,{value:r},e.children)}}}]);